<launch>
  <!-- <param name='robot_description' command='$(find xacro)/xacro $(find full_vehicle_description)/urdf/double_vehicle.xacro'/> -->
  <!-- <param name='robot_description1' command='$(find xacro)/xacro $(find full_vehicle_description)/urdf/single_vehicle1.xacro'/>
  <param name='robot_description2' command='$(find xacro)/xacro $(find full_vehicle_description)/urdf/single_vehicle2.xacro'/> -->
  <!-- <param name='robot_description' command='$(find xacro)/xacro $(find full_vehicle_description)/urdf/full_vehicle_description.xacro'/> -->
  <!-- <param name='robot_description_rod' command='$(find xacro)/xacro $(find full_vehicle_description)/urdf/rod_link.xacro'/> -->
  <include
    file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name='world_name' value='$(find full_vehicle_description)/hospital/room_two_car.world'/>
    <!-- <arg name='world_name' value='$(find full_vehicle_description)/hospital/intelligent_build.world'/> -->
  </include>

  <!-- <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />
  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args=" -urdf -model mycar1 -param robot_description1 -x 0.0 -y 11.0 -z 1 "
    output="screen" />

    <node
    name="spawn_model2"
    pkg="gazebo_ros"
    type="spawn_model"
    args=" -urdf -model mycar2 -param robot_description2 -x 1.6 -y 11.0 -z 1 "
    output="screen" />

  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" /> -->

</launch>